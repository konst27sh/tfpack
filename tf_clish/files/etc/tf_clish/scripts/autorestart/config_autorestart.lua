#!/usr/bin/lua

---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by sheverdin.
--- DateTime: 6/3/24 4:52 PM

local portRange  = {}
local cmd_in     = ""
local value_in   = ""

local tf    = require "tf_module"
local utils = require "tf_utilities"

local ubus_set_cmd_1 = "ubus call uci set '{\"config\":\"tf_autorestart\",\"section\":\"lan"
local ubus_set_cmd_2 = "\", \"type\":\"lan\", \"values\":{\""
local ubus_set_cmd_3 = "\":\""
local ubus_set_cmd_4 = "\"}}'"
local ubus_state = ""
local ubus_value = ""


local function ar_setParam()
    local ar_setParam_res = 1001
    local status = true
    if cmd_in == "host" then
        status = utils.is_valid_ip(value_in)
    elseif cmd_in == "timeUp" or cmd_in == "timeDown" then
        status = utils.is_valid_time(value_in)
    end

    if status then
        ubus_state = cmd_in
        ubus_value = value_in
        for i = portRange[1], portRange[2] do
            local set_cmd = ubus_set_cmd_1 .. i .. ubus_set_cmd_2 .. ubus_state .. ubus_set_cmd_3 .. ubus_value .. ubus_set_cmd_4
            ar_setParam_res = os.execute(set_cmd)
        end
    end
    return ar_setParam_res
end

local function run_config_ar()
    local ar_config_res
    if #arg < 3 then
        print("critical: Incompleted command")
    end
    cmd_in   = arg[1]
    value_in = arg[3]
    portRange = tf.checkPortRange(arg[2])
    if portRange ~= nil and portRange ~= "switch" then
        ar_config_res = ar_setParam()
        if ar_config_res == 0 then
            print("info: autorestart set " .. arg[1] .. " in ports " .. arg[2] .. " value: " .. arg[3] .. " successful!")
        else
            print("error: can not set autorestart " .. arg[1] .. " in ports " .. arg[2] .. " value: " .. arg[3])
        end
    else
        print("Port range is wrong")
    end
end

run_config_ar()







