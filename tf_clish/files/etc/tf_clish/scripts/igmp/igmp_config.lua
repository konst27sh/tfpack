#!/usr/bin/lua

---
--- Generated by Luanalysis
--- Created by sheverdin.
--- DateTime: 2/15/24 1:14 PM
---

package.path = "/etc/tf_clish/scripts/igmp/?.lua;" .. package.path

local tf = require "tf_module"
local igmp = require "igmp_module"

local commandList = {}

local function getCommand(arg_start, cmd_struct)
    local i = arg_start
    while i < #arg do
        local argTable = {}
        argTable.arg = arg[i]
        argTable.value = arg[i + 1]
        i = i + 2
        if cmd_struct[argTable.arg] ~= nil then
            table.insert(commandList, argTable)
        else
            print("error: argument " .. argTable.arg .. " not valid")
        end
    end

    --for _, v in pairs(commandList) do
    --    print(v.arg .. " " .. v.value)
    --end
end

local function set_global()
    getCommand(2, igmp.cmd_global)
    if commandList ~= nil and #commandList ~= 0 then
        igmp.igmp_setGlobalConfig(tf, commandList)
    end
end

local function set_ports()
    getCommand(3, igmp.cmd_ports)
    local portRange = ""
    if arg[2] ~= nil then
        portRange = arg[2]
    else
        print("error: port range is wrong")
        return
    end
    local res = tf.checkPortRange(portRange)
    if res ~= nil then
        if res[3] == "range" or res[3] == "once" then
            for i = res[1], res[2] do
                if commandList ~= nil and #commandList ~= 0 then
                    igmp.igmp_setPortConfig(tf, commandList, i)
                end
            end
        else
            print("error: port range is wrong")
            return
        end
    else
        print("error: port range is wrong")
        return
    end
end

local igmp_config =
{
    ["global"] = set_global,
    ["ports"] = set_ports
}

local function main_igmp()
    if arg[1] ~= nil then
        local cmd = arg[1]
        if igmp_config[cmd] ~= nil then
            igmp_config[cmd]()
        else
            print("arguments is wrong")
            return
        end
    else
        print("arg 1 is wrong")
        return
    end
end

main_igmp()

