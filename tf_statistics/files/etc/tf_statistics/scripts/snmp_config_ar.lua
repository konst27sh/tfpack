---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by sheverdin.
--- DateTime: 3/11/24 4:58 PM
---

local snmp_config_ar = {}

local ar = require "autorestart_module"
local tf = require "tf_module"

local function snmp_getARconfig(mibObj, portNum)
    local resConfig = ""
    local status    = "OK"

    local count = 8
    if tonumber(portNum) > count then
        return nil, "over_index"
    elseif tonumber(portNum) < 1 then
        return nil, "zero_index"
    end

    local paramTable  = ar.configEnum[mibObj.name]
    local paramName   = paramTable[1]
    local key         = ""
    if mibObj.name ~= "autoRstIndex" then
        key = tf.executeCommand("uci -q get tf_autorestart.lan" .. portNum .. "." .. paramName)
        if key == "" then
            if mibObj.name == "autoReStartTimeOnHour" or mibObj.name == "autoReStartTimeOffHour" or
                mibObj.name == "autoReStartTimeOnMin" or mibObj.name == "autoReStartTimeOffMin" then
                key = "25:61"
            elseif mibObj.name ~= "autoRstDstIP" then
                key = "0"
            elseif mibObj.name == "autoRstDstIP" then
                key = "0.0.0.0"
            end
        end
    end

    if mibObj.isEnum == "yes" then
        resConfig = mibObj.enum[key]
    else
        resConfig = key
    end

    if mibObj.name == "autoRstIndex" then
        resConfig = portNum
    elseif mibObj.name == "autoReStartTimeOnHour" or mibObj.name == "autoReStartTimeOffHour" then
        local time = tf.get_hour_minutes(resConfig)
        if (time[1] ~= nil) then
            resConfig = time[1]
        else
            resConfig = 255
        end
    elseif mibObj.name == "autoReStartTimeOnMin" or mibObj.name == "autoReStartTimeOffMin" then
        local time = tf.get_hour_minutes(resConfig)
        if (time[2] ~= nil) then
            resConfig = time[2]
        else
            resConfig = 255
        end
    end
    return resConfig, status
end

snmp_config_ar.main =
{
    ["1.3.6.1.4.1.42019.3.2.1.2.1.1.1"] =
    {
        valueType = "INTEGER",
        nodetype = "column",
        oidLength = "7",
        ubusType = snmp_getARconfig,
        i2c_addr = "0",
        isZero = "no",
        name = "autoRstIndex",
        next_oid = "1.3.6.1.4.1.42019.3.2.1.2.1.1.2"
    },
    ["1.3.6.1.4.1.42019.3.2.1.2.1.1.2"] =
    {
        nodetype = "column",
        oidLength = "7",
        isEnum = "yes",
        enum  = {
            time = "4",
            ping = "2",
            link = "1",
            disable = "0",
            speed = "3",
        },
        i2c_addr = "0",
        valueType = "INTEGER",
        ubusType = snmp_getARconfig,
        name = "autoRstMode",
        isZero = "no",
        next_oid = "1.3.6.1.4.1.42019.3.2.1.2.1.1.3"
    },
    ["1.3.6.1.4.1.42019.3.2.1.2.1.1.3"] =
    {
        valueType = "IpAddress",
        nodetype = "column",
        oidLength = "7",
        ubusType = snmp_getARconfig,
        i2c_addr = "0",
        isZero = "no",
        name = "autoRstDstIP",
        next_oid = "1.3.6.1.4.1.42019.3.2.1.2.1.1.4"
    },
    ["1.3.6.1.4.1.42019.3.2.1.2.1.1.4"] =
    {
        valueType = "INTEGER",
        nodetype = "column",
        oidLength = "7",
        ubusType = snmp_getARconfig,
        i2c_addr = "0",
        isZero = "no",
        name = "autoRstSpeedDown",
        next_oid = "1.3.6.1.4.1.42019.3.2.1.2.1.1.5"
    },
    ["1.3.6.1.4.1.42019.3.2.1.2.1.1.5"] =
    {
        valueType = "INTEGER",
        nodetype = "column",
        oidLength = "7",
        ubusType = snmp_getARconfig,
        i2c_addr = "0",
        isZero = "no",
        name = "autoRstSpeedUp",
        next_oid = "1.3.6.1.4.1.42019.3.2.1.2.1.1.6"
    },
    ["1.3.6.1.4.1.42019.3.2.1.2.1.1.6"] =
    {
        valueType = "INTEGER",
        nodetype = "column",
        oidLength = "7",
        ubusType = snmp_getARconfig,
        i2c_addr = "0",
        isZero = "no",
        name = "autoReStartTimeOnHour",
        next_oid = "1.3.6.1.4.1.42019.3.2.1.2.1.1.7"
    },
    ["1.3.6.1.4.1.42019.3.2.1.2.1.1.7"] =
    {
        valueType = "INTEGER",
        nodetype = "column",
        oidLength = "7",
        ubusType = snmp_getARconfig,
        i2c_addr = "0",
        isZero = "no",
        name = "autoReStartTimeOnMin",
        next_oid = "1.3.6.1.4.1.42019.3.2.1.2.1.1.8"
    },
    ["1.3.6.1.4.1.42019.3.2.1.2.1.1.8"] =
    {
        valueType = "INTEGER",
        nodetype = "column",
        oidLength = "7",
        ubusType = snmp_getARconfig,
        i2c_addr = "0",
        isZero = "no",
        name = "autoReStartTimeOffHour",
        next_oid = "1.3.6.1.4.1.42019.3.2.1.2.1.1.9"
    },
    ["1.3.6.1.4.1.42019.3.2.1.2.1.1.9"] =
    {
        valueType = "INTEGER",
        nodetype = "column",
        oidLength = "7",
        ubusType = snmp_getARconfig,
        i2c_addr = "0",
        isZero = "no",
        name = "autoReStartTimeOffMin",
        next_oid = "1.3.6.1.4.1.42019.3.2.1.3.1.1.1"
    },
}

return snmp_config_ar

