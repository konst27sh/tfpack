#!/bin/sh /etc/rc.common

START=50
USE_PROCD=1




start_instance()
{
	local cfg="$1"
	local http_enable
	local https_enable
	local http_port
	local https_port
	local https_redirect
	local ssl_certificate
	local ssl_certificate_key
	local ssl_session_cache
	local ssl_session_timeout
	local local_only

	uci delete nginx.global
	uci delete nginx.http
	uci delete nginx.https

	uci set nginx.global=main
	uci set nginx.global.uci_enable="true"

	config_get_bool local_only "$cfg" 'local_only' 1

	config_get_bool http_enable "$cfg" 'http_enable' 1
	if [ "$http_enable" == "1" ]; then
		config_get http_port "$cfg" 'http_port'

		uci set nginx.http=server
		uci set nginx.http.listen="$http_port default_server"
		uci set nginx.http.server_name="http"
		if [ "$local_only" == "1" ]; then
			uci add_list nginx.http.include='restrict_locally'
		else
			uci add_list nginx.http.include='no_restrict_locally'
		fi
		uci add_list nginx.http.include='conf.d/*.locations'
		uci set nginx.http.access_log='off; # logd openwrt'
	else
		uci delete nginx.http
	fi

	config_get_bool https_enable "$cfg" 'https_enable' 1
	if [ "$https_enable" == "1" ]; then
		config_get https_port "$cfg" 'https_port'
		config_get_bool https_redirect "$cfg" 'https_redirect' 1
		config_get ssl_certificate "$cfg" 'ssl_certificate'
		config_get ssl_certificate_key "$cfg" 'ssl_certificate_key'
		config_get ssl_session_cache "$cfg" 'ssl_session_cache'
		config_get ssl_session_timeout "$cfg" 'ssl_session_timeout'

		uci set nginx.https=server
		uci set nginx.https.listen="$https_port ssl "
		uci set nginx.https.server_name="https"

		if [ "$local_only" == "1" ]; then
			uci add_list nginx.https.include='restrict_locally'
		else
			uci add_list nginx.https.include='no_restrict_locally'
		fi

		uci add_list nginx.https.include='conf.d/*.locations'
		uci set nginx.https.uci_manage_ssl="self-signed"
		uci set nginx.https.ssl_certificate="$ssl_certificate"
		uci set nginx.https.ssl_certificate_key="$ssl_certificate_key"
		uci set nginx.https.ssl_session_cache="$ssl_session_cache"
		uci set nginx.https.ssl_session_timeout="$ssl_session_timeout"
		uci set nginx.https.access_log="off; # logd openwrt"

		if [ "$https_redirect" == "1" ]; then
			uci set nginx.http.return="302 https://$host$request_uri"
		fi
	else
		uci delete nginx.https
	fi

	uci commit nginx
}

service_triggers()
{
	procd_add_reload_trigger "https"

}

start_service() {
	config_load https
	config_foreach start_instance server
}
